* CONFIG 3 : 50 iter
cluster_1 = np.random.normal(-50, 0.04, (5, 20))
cluster_2 = np.random.normal(300, 0.7, (10, 20))
discriminating_data = np.concatenate((cluster_1, cluster_2))
non_discriminating_data = np.random.normal(0, 1, (15, 80))

* CONFIG 4 : 100 iter
cluster_1 = np.random.normal(-50, 0.04, (5, 20))
cluster_2 = np.random.normal(300, 0.7, (10, 20))
discriminating_data = np.concatenate((cluster_1, cluster_2))
non_discriminating_data = np.random.normal(0, 1, (15, 180))

* CONFIG 5 : 50 iter (= to config 1 otherwise)
cluster_1 = np.random.normal(-50, 0.04, (4, 20))
cluster_2 = np.random.normal(300, 0.09, (3, 20))
cluster_3 = np.random.normal(1, 0.9, (6, 20))
cluster_4 = np.random.normal(-300, 0.3, (2, 20))
discriminating_data = np.concatenate((cluster_1, cluster_2, cluster_3, cluster_4))
non_discriminating_data = np.random.normal(0, 1, (15, 50))

##################################################################################

* CONFIG 1 : 500 iter
cluster_1 = np.random.normal(-50, 0.04, (4, 20))
cluster_2 = np.random.normal(300, 0.09, (3, 20))
cluster_3 = np.random.normal(1, 0.9, (6, 20))
cluster_4 = np.random.normal(-300, 0.3, (2, 20))
discriminating_data = np.concatenate((cluster_1, cluster_2, cluster_3, cluster_4))
non_discriminating_data = np.random.normal(0, 1, (15, 50))

* CONFIG 2 : 50 iter
cluster_1 = np.random.normal(-50, 0.04, (4, 20))
cluster_2 = np.random.normal(300, 0.7, (3, 20))
cluster_3 = np.random.normal(50, 2.4, (6, 20))
cluster_4 = np.random.normal(-300, 1.6, (2, 20))
discriminating_data = np.concatenate((cluster_1, cluster_2, cluster_3, cluster_4))
non_discriminating_data = np.random.normal(0, 1, (15, 50))